---
export interface Props {
  labels?: string[];
}

const { labels = [] } = Astro.props;

// Build breadcrumb from URL path
const pathname = Astro.url.pathname;
const segments = pathname.split('/').filter(Boolean);

// Create breadcrumb trail
const breadcrumbTrail = [
  { label: 'Home', href: '/' }
];

// Build the breadcrumb trail based on URL segments
segments.forEach((segment, index) => {
  const href = '/' + segments.slice(0, index + 1).join('/');
  
  // Use provided label or fall back to formatted segment
  const label = labels[index] || segment.charAt(0).toUpperCase() + segment.slice(1).replace(/-/g, ' ');
  
  if (index < segments.length - 1) {
    breadcrumbTrail.push({ label, href });
  } else {
    // Last segment is the current page (no link)
    breadcrumbTrail.push({ label, href: null });
  }
});
---

<section class="bg-gray-50 py-4">
  <div class="container mx-auto px-4">
    <nav class="text-sm text-gray-600">
      {breadcrumbTrail.map((item, index) => (
        <>
          {item.href ? (
            <a href={item.href} class="hover:text-pink-600">{item.label}</a>
          ) : (
            <span class="text-gray-900">{item.label}</span>
          )}
          {index < breadcrumbTrail.length - 1 && <span class="mx-2">/</span>}
        </>
      ))}
    </nav>
  </div>
</section>